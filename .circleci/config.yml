# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  myjob1:  # Choose any name, such as `build`
      # The primary container, where your job's commands will run
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout # check out the code in the project directory
        - run: echo "hello world" # run the `echo` command
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
  # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.12.0b1-alpine3.17
    steps:
      - checkout
      - add_ssh_keys:
          # You can get this ID in the section where you registered the SSH Key
          fingerprints:
            - 4c:55:0a:b4:ce:9a:96:04:8c:c6:77:ea:18:b7:7a:ab
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
            ansible --version
            ansible-playbook --version
            echo "Hello World"
      - run:
          name: Run Playbook and Configure server 1
          command: |
            pwd
            ls
            cd .circleci/ansible
            ls
            ansible-playbook -i inventory.txt main.yml
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - myjob1
      # - create_infrastructure
      - configure_infrastructure
  # smokeTestWorkflow:
  #   jobs:
  #     - smoke_test